1. issue:  windows环境上，如何确保执行脚本的角色是管理员或具有管理员权限

   solution: 通过在Windows系统路径下尝试新建一个文件来试试。

   md "%WinDir%\system32\test_permissions" 2>NUL||(echo 请使用管理员身份登录运行！&&Pause >NUL&& exit)
   rd "%WinDir%\system32\test_permissions" 2>NUL

2. issue: xPath的意思？

   solution: xPath 是 XML 文档中路径描述语言（查找信息的语言http://www.w3school.com.cn/xpath/xpath_syntax.asp），用来在XML文档中通过元素和属性导航。

3. issue: Dom4j使用xPath查找获取节点时，报ava.lang.NoClassDefFoundError: org/jaxen/JaxenException异常。

   solution: 原因是缺少jaxen包， Dom4j之所以能够使用XPath来定位，其实是依赖了这个包，所以把这个包导入到工程中，就可以使用了。

4. issue: java代码中处理xml文件，更改其中某些相应元素的某些属性值，程序运行结束后，实际文件中的相应值没有改变。 

   solution:  原因是没有回写回原文件。应采用XMLWriter回写。

5. issue: bat脚本在执行时，对于写的函数,例如encTool，进入到函数encTool中执行某条语句时，出错，提示为“系统找不到对应函数标签--encTool”（the system can not find the batch label--encTool）。

   solution: 原因是，根据stackoverflow上查的资料显示（https://stackoverflow.com/questions/232651/why-the-system-cannot-find-the-batch-label-specified-is-thrown-even-if-label-e），表示有两个原因，一个是不能使用CRLF换行，另一个表示是跨块调用了，最好采用call来调用要使用的那个脚本。（补充call与start等的区别：基本上，调用exe可能差别不大，对于调用脚本，则start是启动一个单独的窗口运行指定的程序或命令，对于调用者环境变量无影响。而call则是从批处理程序调用另一个批处理程序，call的话，还是在主调用者的环境变量中。可以通过在CMD中输入call /?和start /?来获取相关信息说明 ）

6. issue： 如何在bat中获得上一个命令输出到控制台的输出，当输出有多行时

   solution:  可以采取先将上个命令的输出重定向到一个文件，然后再用FOR /F 获取文件中的第一行和其它几行。例如， 假设重定向输出到enc.txt，其中有两行，则：

   ::单独取enc.txt中第一行
   FOR /F "tokens=2 delims=: " %%i in (enc.txt) do ( set encryptedKey=%%i )&(goto next)
   :next
   ::跳过enc.txt中第一行
   FOR /F "tokens=2 skip=1 delims=: " %%j in (enc.txt) do ( set encryptedPassword=%%j )

7. issue:  运行jar包失败，提示[Unsupported major.minor version 52.0 [duplicate\]](https://stackoverflow.com/questions/22489398/unsupported-major-minor-version-52-0)

   solution: 原因是java版本不配套。即编译打包时，运行的是JDK8(对应version数字就是52)版本，而生产环境实际运行时，JDK版本比这个低。因为java程序是运行在基本JDK的JVM上的，实际上java程序运行时，一般都要带上自己的jdk。所以解决方法是，保证编译时的JDK与生产环境实际运行的JDK是同一个。
8. issue:  bat脚本中cd %~dp0，执行时提示"The system cannot find the path specified"

   solution:  依我个人经验判断，应该是bat脚本中cd 命令后，不能有其它命令执行（不过，我的问题并未解决），否则则会报此错误，不知是不是微软的bug.https://stackoverflow.com/questions/33638281/what-is-the-reason-for-the-error-message-system-cannot-find-the-path-specified这篇stackoverflow问题解答中有涉及到%SystemRoot%里64位可能有多个cmd.exe，导致可能会存在与我碰到的这个问题相关的。但是stackoverflow这个问题是涉及到路径中用到了%SystemRoot%\System32.

9. issue: 采用java.util中Property属性类操作修改properties文件中相应键值时，会将原文件中注释给清掉，影响运维。

   solution: 只能采用笨方法：使用读写器和文件输入输出流，保持原来空行和注释输出到新的properties文件，修改指定的属性。示例程序为：
   fis = new FileInputStream(fileName);
BufferedReader br = new BufferedReader(new InputStreamReader(fis,"UTF-8"));
String line="";
StringBuffer outStr=new StringBuffer("");//所有输出内容都放到outStr
while (null != (line=br.readLine())){
    if (""==line){  //empty string,then get a new line
        outStr.append("\n");
    } else if (line.startsWith("#")||line.startsWith("!")){ //如果是注释，继续将注释保留写入
        outStr.append(line + "\n");
    } else {
        String inLine = line.trim();
        int valIndex = inLine.indexOf("=");
        //判断是否为key/value格式
        if (-1 != valIndex) {  //是key/value格式
            String tmpKey = inLine.substring(0,valIndex); //获取到当前key值
            if (tmpKey.equals(key)){  //找到了我们指定的key,则将其值置为我们想要换的值
               String tmpComment = "# update '" + key + "' to value: " + toVal +" by " +
                    this.getClass().getName()+".class at time " + System.currentTimeMillis();
                outStr.append(tmpComment + "\n"); //修改前先添加注释
                outStr.append(key + "=" + toVal + "\n");
                continue;
            }
        }
        //else
        outStr.append(line + "\n");
    }
} //while
br.close();
fis.close();
fos= new FileOutputStream(fileName);
OutputStreamWriter outWriter = new OutputStreamWriter(fos,"UTF-8");
BufferedWriter bw = new BufferedWriter(outWriter);
bw.write(outStr.toString());
bw.close();
outWriter.close();
fos.close();
SET /A expression
SET /P variable=[promptString]

10. isssue: bat批处理如何判断输入是否为数字？

solution: 在 SET 命令中添加了两个新命令行开关:
/A 命令行开关指定等号右边的字符串为被评估的数字表达式。该表达式
评估器很简单并以递减的优先权顺序支持下列操作:

    ()                  - 分组
    ! ~ -               - 一元运算符
    * / %               - 算数运算符
    + -                 - 算数运算符
    << >>               - 逻辑移位
                       - 按位“与”
    ^                   - 按位“异”
    |                   - 按位“或”
/P 命令行开关允许将变量数值设成用户输入的一行输入。读取输入
行之前，显示指定的 promptString。promptString 可以是空的。

11. issue: 直接重写原来的xml配置文件，默认会将写的写在同一行。如何设置换行和屏蔽空行？

   solution: 原来，XMLWriter或XMLSerializer可以设置输出格式，有OutputFormat类，里面可以构造输出格式类的缩进字符串和是否换行。同时，OutputFormat类的setTrimText(true)可以去掉配置文件中的空行。例如：

   ```java
   OutputFormat outputFormat = new OutputFormat("  ",true);
   outputFormat.setTrimText(true);  //去掉空行或空的
   XMLWriter xmlWriter = new XMLWriter(new FileOutputStream(fileName),outputFormat);
   xmlWriter.write(doc);
   ```

12. issue:  java中如何找到XML文件中的指定节点中的某个子节点？

   solution: 还是参照issue3,java中可以采用dom4j的XPath,先找到对应节跳路径，如果要找到指定节点中的子节点，则先通过路径找到该指定节点，再selectNodes该节点里所有指定子节点。
   

   

   
