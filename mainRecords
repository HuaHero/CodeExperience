1. issue:  windows环境上，如何确保执行脚本的角色是管理员或具有管理员权限

   solution: 通过在Windows系统路径下尝试新建一个文件来试试。

   md "%WinDir%\system32\test_permissions" 2>NUL||(echo 请使用管理员身份登录运行！&&Pause >NUL&& exit)
   rd "%WinDir%\system32\test_permissions" 2>NUL

2. issue: xPath的意思？

   solution: xPath 是 XML 文档中路径描述语言（查找信息的语言http://www.w3school.com.cn/xpath/xpath_syntax.asp），用来在XML文档中通过元素和属性导航。

3. issue: Dom4j使用xPath查找获取节点时，报ava.lang.NoClassDefFoundError: org/jaxen/JaxenException异常。

   solution: 原因是缺少jaxen包， Dom4j之所以能够使用XPath来定位，其实是依赖了这个包，所以把这个包导入到工程中，就可以使用了。

4. issue: java代码中处理xml文件，更改其中某些相应元素的某些属性值，程序运行结束后，实际文件中的相应值没有改变。 

   solution:  原因是没有回写回原文件。应采用XMLWriter回写。

5. issue: bat脚本在执行时，对于写的函数,例如encTool，进入到函数encTool中执行某条语句时，出错，提示为“系统找不到对应函数标签--encTool”（the system can not find the batch label--encTool）。

   solution: 原因是，根据stackoverflow上查的资料显示（https://stackoverflow.com/questions/232651/why-the-system-cannot-find-the-batch-label-specified-is-thrown-even-if-label-e），表示有两个原因，一个是不能使用CRLF换行，另一个表示是跨块调用了，最好采用call来调用要使用的那个脚本。（补充call与start等的区别：基本上，调用exe可能差别不大，对于调用脚本，则start是启动一个单独的窗口运行指定的程序或命令，对于调用者环境变量无影响。而call则是从批处理程序调用另一个批处理程序，call的话，还是在主调用者的环境变量中。可以通过在CMD中输入call /?和start /?来获取相关信息说明 ）

6. issue： 如何在bat中获得上一个命令输出到控制台的输出，当输出有多行时

   solution:  可以采取先将上个命令的输出重定向到一个文件，然后再用FOR /F 获取文件中的第一行和其它几行。例如， 假设重定向输出到enc.txt，其中有两行，则：

   ::单独取enc.txt中第一行
   FOR /F "tokens=2 delims=: " %%i in (enc.txt) do ( set encryptedKey=%%i )&(goto next)
   :next
   ::跳过enc.txt中第一行
   FOR /F "tokens=2 skip=1 delims=: " %%j in (enc.txt) do ( set encryptedPassword=%%j )

7. issue:  运行jar包失败，提示[Unsupported major.minor version 52.0 [duplicate\]](https://stackoverflow.com/questions/22489398/unsupported-major-minor-version-52-0)

   solution: 原因是java版本不配套。即编译打包时，运行的是JDK8(对应version数字就是52)版本，而生产环境实际运行时，JDK版本比这个低。因为java程序是运行在基本JDK的JVM上的，实际上java程序运行时，一般都要带上自己的jdk。所以解决方法是，保证编译时的JDK与生产环境实际运行的JDK是同一个。
8. issue:  bat脚本中cd %~dp0，执行时提示"The system cannot find the path specified"

   solution:  依我个人经验判断，应该是bat脚本中cd 命令后，不能有其它命令执行（不过，我的问题并未解决），否则则会报此错误，不知是不是微软的bug.https://stackoverflow.com/questions/33638281/what-is-the-reason-for-the-error-message-system-cannot-find-the-path-specified这篇stackoverflow问题解答中有涉及到%SystemRoot%里64位可能有多个cmd.exe，导致可能会存在与我碰到的这个问题相关的。但是stackoverflow这个问题是涉及到路径中用到了%SystemRoot%\System32.

9. issue: 采用java.util中Property属性类操作修改properties文件中相应键值时，会将原文件中注释给清掉，影响运维。

   solution: 只能采用笨方法：使用读写器和文件输入输出流，保持原来空行和注释输出到新的properties文件，修改指定的属性。示例程序为：
   fis = new FileInputStream(fileName);
BufferedReader br = new BufferedReader(new InputStreamReader(fis,"UTF-8"));
String line="";
StringBuffer outStr=new StringBuffer("");//所有输出内容都放到outStr
while (null != (line=br.readLine())){
    if (""==line){  //empty string,then get a new line
        outStr.append("\n");
    } else if (line.startsWith("#")||line.startsWith("!")){ //如果是注释，继续将注释保留写入
        outStr.append(line + "\n");
    } else {
        String inLine = line.trim();
        int valIndex = inLine.indexOf("=");
        //判断是否为key/value格式
        if (-1 != valIndex) {  //是key/value格式
            String tmpKey = inLine.substring(0,valIndex); //获取到当前key值
            if (tmpKey.equals(key)){  //找到了我们指定的key,则将其值置为我们想要换的值
               String tmpComment = "# update '" + key + "' to value: " + toVal +" by " +
                    this.getClass().getName()+".class at time " + System.currentTimeMillis();
                outStr.append(tmpComment + "\n"); //修改前先添加注释
                outStr.append(key + "=" + toVal + "\n");
                continue;
            }
        }
        //else
        outStr.append(line + "\n");
    }
} //while
br.close();
fis.close();
fos= new FileOutputStream(fileName);
OutputStreamWriter outWriter = new OutputStreamWriter(fos,"UTF-8");
BufferedWriter bw = new BufferedWriter(outWriter);
bw.write(outStr.toString());
bw.close();
outWriter.close();
fos.close();
SET /A expression
SET /P variable=[promptString]

10. isssue: bat批处理如何判断输入是否为数字？

solution: 在 SET 命令中添加了两个新命令行开关:
/A 命令行开关指定等号右边的字符串为被评估的数字表达式。该表达式
评估器很简单并以递减的优先权顺序支持下列操作:

    ()                  - 分组
    ! ~ -               - 一元运算符
    * / %               - 算数运算符
    + -                 - 算数运算符
    << >>               - 逻辑移位
                       - 按位“与”
    ^                   - 按位“异”
    |                   - 按位“或”
/P 命令行开关允许将变量数值设成用户输入的一行输入。读取输入
行之前，显示指定的 promptString。promptString 可以是空的。

11. issue: 直接重写原来的xml配置文件，默认会将写的写在同一行。如何设置换行和屏蔽空行？

   solution: 原来，XMLWriter或XMLSerializer可以设置输出格式，有OutputFormat类，里面可以构造输出格式类的缩进字符串和是否换行。同时，OutputFormat类的setTrimText(true)可以去掉配置文件中的空行。例如：

   ```java
   OutputFormat outputFormat = new OutputFormat("  ",true);
   outputFormat.setTrimText(true);  //去掉空行或空的
   XMLWriter xmlWriter = new XMLWriter(new FileOutputStream(fileName),outputFormat);
   xmlWriter.write(doc);
   ```

12. issue:  java中如何找到XML文件中的指定节点中的某个子节点？

   solution: 还是参照issue3,java中可以采用dom4j的XPath,先找到对应节跳路径，如果要找到指定节点中的子节点，则先通过路径找到该指定节点，再selectNodes该节点里所有指定子节点。
   
13. issue : bat脚本中如何输出换行符？

solution: 简单地，可以使用如下代码：

方式1

```bat
echo .
```

方式2

```bat
@echo off
@echo line1
@echo:
@echo line2
```

14. issue:  如何编写bat脚本，在要输入密码时，以*键掩藏输入？

   solution:  bat脚本或者说dos命令，没有输入参数来达到想要的目的，要想这样做，一种方法时是调用C/C++程序，在C/C++程序中,conio.h(详请参照https://en.wikipedia.org/wiki/Conio.h)中提供一个函数getch(当然，微软已弃用这个了，改成了_getch()函数)可以接收任何键盘输入字符的asscii码并且不回显，相较而言，标准C++库中getchar()从键盘接收输入是回显的。

15. issue:  在C/C++程序中,采用getchar()或_getch()获取键盘输入时，如果键盘输入的是退格键（BS，退格键BS,BackSpace，asscii码十进制值是8），如何将已经输入的回显给删除

   solution: 采用转议字符'\b'输出退格键，注意，'\b'只是将光标位置回退一格，要想将回显的输入给清掉，需要'\b'后面紧跟着要替换的目的字符，例如，要清除，则'\b'后面应跟空字符，但这样光标又走了一个位置，有一个多余的空格输出，因此，须再跟'\b'字符回退光标。代码如下：

   ```C++
   cout << "\b \b";  //退格然后用空行替换退过的那一格
   ```

    网上参照：https://blog.csdn.net/zhanghuoding/article/details/52041120

16. issue: 为什么一个分支中写两个goto，第一个goto A执行完，并不是紧接着执行第二个goto B.

   solution: 注意bat脚本程序总体上是流水线的从前往后执行，只是有goto关键字可以改变流程而已，当然写函数也可以，有类似调用栈的效果。因此，采用goto A时，是直接到A的部分执行，A的部分执行完后，是紧接着执行A 脚本代码后面的代码，而不是回到调用goto A的地方。

17. issue:  碰到一个问题，采用for /F 获取文件password中内容时，获取的为空。

   solution: 原因，采用notepad直接打开，发现除了输入的文本"adfba"时，文本后面还有NUL等等字符，与预期的正常文本文件有差异，最终在C++中通过将ofstream outfile("password");outfile << pw(pw是一个数组)替换原来的outfile.write(pw,sizeof(pw))后解决。看C++ http://www.cplusplus.com/reference/ 中相应描述，write是按块写的，只有按outfile<<pw;方式才是按照pw类型格式正常写入到输出文件password。

18. issue:  这里有一篇比较好的网上文档介绍ASCII码

   solution: https://www.crifan.com/files/doc/docbook/char_encoding/release/webhelp/ascii_ctrl_char.html#ascii_27_esc
19. issue:  bash脚本中,$0的值，./A.sh输出与sh A.sh的输出，一个为./A.sh,一个为A.sh，输出结果不同，为什么？

   solution:  $0是表示当前脚本的完整名称。所以，./A.sh时，也输出完整的./A.sh完整文件名，当作为shell解释器的文件参数sh A.sh时，也是输出完整的名称。如果是sh /root/A.sh，则输出的A.sh。

20. issue:  shell脚本中如何从函数function中返回字符串。Returning Strings From Functions

   As I noted earlier, functions in Bash can return only integers. As such, writing `return "a string"` would be invalid code. Still, in many situations, you need more than just a zero or one. 

   solution: 当然简单方式是直接在函数中输出。但是，有时候需要从函数中返回字符串，以便在函数调用前后追加一些字符串。于是，有两种解决方法。The first solution to capture the output of a function or another command is to use backticks（``）. In 99% of the cases, this will work just fine. For the second solution, we've chosen to first assign the return value to a variable. In that assignment, we used `$()`, which, in this case, forks the script, executes the code, and returns its output.https://blog.csdn.net/xiaoyao3857/article/details/9060321.

21. issue:  shell脚本中如何在echo输出后不用换行？

   solution: 在stackoverflow上找到一个类似问题（https://stackoverflow.com/questions/11193466/echo-without-newline-in-a-shell-script），其中解答为不同版本的操作系统，echo差别比较大，提问者是采用echo -n在终端上可以，在脚本中时还是换行。解答者建议复杂输出都用printf.查了下在线manual(man 1p echo)，发现echo默认输出后换行，哪怕没有参数，命令之后，也是换行。而printf命令（man 1 printf），则是采用C格式的输出。因此，更好用。

22. issue:  如何在shell脚本中实现输入显示为*的效果？

   solution: 通过查阅网上资料，在stackoverflow中找到类似提问（https://stackoverflow.com/questions/421860/capture-characters-from-standard-input-without-waiting-for-enter-to-be-pressed），不过从回答中看到，确实没有标准库提供。从解答中看到，对于Windows，如之前所列的，采用C++程序加头文件conio.h和使用其_getch()方法。但是，https://stackoverflow.com/questions/421860/capture-characters-from-standard-input-without-waiting-for-enter-to-be-pressed建议采用include<curses.h>和使用其getch()方法，这样可以跨平台。关于curses请参照：http://heather.cs.ucdavis.edu/~matloff/UnixAndC/CLanguage/Curses.pdf。

   In order to use curses, you must include in your source code a statement
   #include 
   and you must link in the curses library:
   gcc -g sourcefile.c -lcurses

23. issue: 在类Unix系统中，编译cpp文件时，报程序中有游离的‘\357’‘\273’‘\277’等错误。

   solution: [DP: 生活的脚步，技术的点滴...](https://www.cnblogs.com/lidp/)

   

   ## [gcc编译报错：程序中有游离的‘\357’‘\273’‘\277’等](https://www.cnblogs.com/lidp/archive/2009/06/17/1697886.html)

   造成的原因主要有两个：

   1. 程序（＊.c，＊.h）中使用了中文的标点符号(全角)，比如；，｝，＋。

   改成英文的标点半角符号就行了。

   甚至有时候空格也会出现类似错误，删掉该空格 重新输入。

   vim里面做类似替换还是很容易的。

   如何看到报错的符号？
   od -c hello.c > log.txt
   在log中就能看到符号了

   2. 如果替换成了英文标点还出错的话，还报此错误，那么就是文件存贮格式的问题了。
      一般在windows下的文件都存成ansi格式，为了在linux下能通用，建议保存成UTF-8不带BOM 
      编码格式，因为目前gcc和g++不支持UTF-8带BOM编码格式。
 24. issue: shell脚本中，怎么判断输入是否是数字？[Is there an easy way to determine if user input is an integer in bash?](https://stackoverflow.com/questions/4137262/is-there-an-easy-way-to-determine-if-user-input-is-an-integer-in-bash)

   solution: *For the syntax,* `arg1 OP arg2`*,* `OP` *is one of* `-eq`*,* `-ne`*,* `-lt`*,* `-le`*,* `-gt`*, or* `-ge`*. These arithmetic binary operators return* `true` *if* `arg1`*is equal to, not equal to, less than, less than or equal to, greater than, or greater than or equal to* `arg2`*, respectively.*`arg1` *and*`arg2` *may be positive or negative integers. -* *Bash Manual*

   如上，在bash的手册中，就说了，算术操作符-eq 等前后操作数就是整数，但是实际测试是行不通的，还得采用其中的第二个解答，如下：

   One way is to check whether it contains non-number characters. You replace all digit characters with nothing and check for length -- if there's length there's non-digit characters.

   ```bash
   if [[ -n ${input//[0-9]/} ]]; then
       echo "Contains letters!"
   fi
   ```

   Another approach is to check whether the variable, evaluated in arithmetic context, is equal to itself. This is bash-specific

   ```bash
   if [[ $((foo)) != $foo ]]; then
       echo "Not just a number!"
   fi
   ```

 25. issue:   shell脚本中如何获取当前脚本的绝对路径？

   solution:  一般的，一些博客会指出用dirname命令，但是 dirname输出的路径取决于后面给的参数。比如，如果是以./A.sh执行，同时，A.sh中是通过`dirname $0` ，则得到的结果是.，表示当前路径，只有当是通过sh /root/A.sh时，A.sh中通过`dirname $0`得到的才是绝对路径，因此，单纯通过dirname是不满足要求的。通过网上搜索，找到两种方法，一种是与cd,pwd命令配合，先cd “$(dirname "$0")”;然后紧接着pwd，最终将pwd的结果返回；另一种是与readlink配合，先通过$(readlink -f "$0")获取到$0参数的全路径文件名，然后再通过dirname获得脚本的绝对路径。示例如下“

   ```bash
   SHELL_FOLDER=$(cd "$(dirname "$0")";pwd)
   ```

   或

   ```bash
   SHELL_FOLDER=$(dirname $(readlink -f "$0"))
   ```

   但这两个都有一个情况，就是须在进入脚本时，就马上执行，否则，如果已经cd进入了其它目录后，再执行则不对（实测发现）。

26. issue:   Linux(suse)中java -classpath PathA;PathB执行后显示找不到主类

   solution:  java path中,Linux上路径是以冒号(:)分隔，Windows下才是以分号(;)分隔。

27. isssue: openssl 如何查看证书有效期或查看证书内容？

   solution:   openssl x509 -text -in server.crt  （可以参照http://blog.51cto.com/ngames/1559201）
   Certificate:
       Data:
           Version: 3 (0x2)
           Serial Number:

    e9:f1:7e:a2:f9:b0:d8:a6
           Signature Algorithm: sha1WithRSAEncryption
           Issuer: C=CN, ST=ZHEJIANG, L=HANGZHOU, O=HUAWEI, OU=UC, CN=eSpaceMeeting/emailAddress=zhangchengbin@huawei.com
           Validity
               Not Before: Jan 27 09:26:30 2016 GMT
               Not After : Jan 22 09:26:30 2036 GMT

   引申：通过keytool查看证书的信息:/hqh01/eSpace_UC/eSpace_UC_Server/Server/BMU/conf # ../../../Jre7_Linux/bin/keytool -list -keystore tomcatKeyStore -v

28. issue:  如何在shell脚本中以其它用户执行某些命令；

   solution: 通过su -c "command" [user]来。如果command中要带参数，参数少的，可以直接在"command"引号中一起将参数写完，如果参数是换行形式的或者是交互式的，则可以通过EOF来将参数一次性传入，” << EOF换行后直接是要输入的内容直到再遇到EOF“，EOF间所有的都当作输入，所以，一般第一个参数便是要切换的用户身份的密码。因为密码输入后要换行，所以第一个参数后则换行，而其它则根据命令需要的参数形式，看是换行还是空格。
29.issue: 如何掌握java的exception处理？
   solution: 总体原则，作为面向对象语言，exception在java中也是对象，是发生在运行时的，生成的，处理也是由JRE寻找其处理，采用try-catcty-[finally]来进行处理。参照 https://www.journaldev.com/1696/exception-handling-in-java 
30.issue:visual studio2012写的C++程序，编译和运行release时，没有问题，而到目标主机上去运行时，却提示找不到msvcp110.dll,是什么原因？
   solution:找不到msvcp110.dll，是因为目标主机上没有安装visual c++ 2012 redistributable库以支持VS2012写的C++程序。由于目标主机是64位操作系统，所以我下载安装了visual c++ 2012 redistributable x64位，安装后，确实在系统的C盘/System32有了msvcp110.dll，但是运行程序时仍提示找不到msvcp110.dll库，原来，因为我写的程序是Win32控制台程序，因此应该需要安装的是visual c++ 2012 redistributable x86这个库，这样程序运行在64位操作系统上时，会运行在WOW64里以32位运行。
   
31.issue:bat中函数如何写？
    solution:bat中函数以标签开始，只能以goto:eof结束，但是，由于bat是流式形从上往下解释执行，因此，主入口就是第一名或第一个函数，如果要A函数执行完执行另一个函数B，需要在A函数中该进入B函数的地方，调用B函数。而goto:eof则是直接表示到bat结束。
             例如：'''
             title "根据纯IP列表文本文件生成servers配置文件"

::函数以标签开始,以GOTO:EOF为结束
:get_user
set /P username=请输入主机的登录用户名(Input the login name):
if "%username%" == "" (
	echo "Input login name is null,it\'s illegal,please re-enter"
	call:get_user
) else (
	echo username is %username%
	call:get_pass
)
goto:eof


:get_pass
set /P password=请输入%username%的密码(Input the password of %username%):
if "%password%" == "" (
	echo "Input %username%\'s password is null,it's illegal,please re-enter"
	call:get_pass
)
'''

32.问题：机器上采用lvm2挂载了一个磁盘,vg name为vgapps,vg path为/dev/vgapps,在其上建了一个lv,lvname为lvapps,lvpath为/dev/vgapps/lvapps。后在，在操作中，没有采用lvm2的相关命令删除这个vg和lv,而直接卸载了该物理磁盘，导致采用lvdisplay和vgdisplay时，仍能看到lvapps和vgapps，状态为not availabe，再采用lvremove 和vgremove删除不了； 

解决： 采用如下步骤命令后，删除成功。
           
 dd if=/dev/zero of=/tmp/tmp.raw bs=1M count=100
 losetup -f
 losetup /dev/loop0 /tmp/tmp.raw
 vgextend /dev/vgapps /dev/loop0

  vgremove /dev/vgapps --force
  pvremove /dev/loop0
  losetup -d /dev/loop0
  
  rm /tmp/tmp.raw
  lvs
  
  

参照：
https://blog.ls-al.com/lvm-removing-vg-with-missing-disk/

https://serverfault.com/questions/894410/cant-remove-volume-group。

  
   
